openapi: "3.0.0"
info: 
  title: learn express n swagger- LCO
  description: LCO- a course segment about writhing docs
  version: 1.1.0
  contact:
    email: xyz@gmail.com
    url: "https://qwerty.com"

# servers:
#   - url: "https//localhost:4000/api/v1"
#     description: for local host -secure
#   - url: "http//localhost:4000/api/v1"
#     description: for local host -regular

servers:
  - url: "{protocol}://localhost:4000/api/{versions}"
    description: for local host -secure
    variables:
      versions:
        enum:
          - v1
          - v2
        default: v1
      protocol:
        enum:
          - http
          - https
        default: http
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer

paths: 
  /lco:
    get:
      tags:
        - String
      summary: returns a greet messagee from lco
      responses:
        200:
          description: All good sucess
          content:
            application/json:
              schema:
                type: string
                example: "mystring"
        400:
          description: bad request
        500:
          description: internal server error

  /lcoobject:
    get:
      tags:
        - Object
      summary: returns a unique courses
      responses:
        200:
          description: All good sucess
          content:
            application/json:
              schema:
                type: object
                properties: 
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number                   
        400:
          description: bad request
        500:
          description: internal server error

  /courses:
    get:
      tags:
        - Array
      summary: returns All courses
      responses:
        200:
          description: All good sucess
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: 
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number                   
        400:
          description: bad request
        500:
          description: internal server error

  /mycourse/{courseId}:
    get:
      tags:
        - String
      summary: returns courses based on request id
      parameters:
        - name: courseId
          in: path
          required: true
          default: 12
          schema:
            type: string
      responses:
        200:
          description: All good sucess
          content:
            application/json:
              schema:
                type: object
                properties: 
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number                   
        400:
          description: bad request
        500:
          description: internal server error

  /addCourse:
    post:
      tags:
        - String
      summary: Add new course to existing courses
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        require: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
      responses:
        200:
          description: All good sucess
          content:
            application/json:
              schema:
                type: boolean                   
        400:
          description: bad request
        500:
          description: internal server error

  /coursequery:
    get:
      tags:
        - String
      summary: tryig to lear about query
      parameters: 
        - name: location
          in: query
          requered: true
          schema:
            type: string
            enum: [delhi, Mumbai, kolkata] 
        - name: device
          in: query
          requered: true
          schema:
            type: string
            enum: [web, mobile] 
      responses:
        200:
          description: All good sucess
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string                   
                  device:
                    type: string                   
        400:
          description: bad request
        500:
          description: internal server error

  /courseupload:
    post:
      tags:
        - String
      summary: uploading course img
      parameters:
      - in: header
        name: auth
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file: 
                  type: string
                  format: binary
      responses:
        200:
          description: All good sucess               
        400:
          description: bad request
        500:
          description: internal server error